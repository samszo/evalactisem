
Evaluation de l’activité 
dans l’espace sémantique
de la Dixième Famille
Spécifications Techniques Détaillées
‘‘‘Version 0.1
‘‘‘25/10/2007








‘‘‘











Table des mises à jour du document
‘‘‘

{| border=1 cellspacing=0 
!‘‘‘Version du Document‘‘‘ !*!‘‘‘Date‘‘‘ !*!‘‘‘Auteur‘‘‘ !*!‘‘‘Objet de la mise à jour‘‘‘ !
|- 
|0.1 |*|25/10/07 |*|Samuel Szoniecky |*|Création
|- 
| |*| |*| |*|
|- 
| |*| |*| |*|
|- 
| |*| |*| |*|
|} 
‘‘‘
SOMMAIRE
‘‘‘‘‘‘‘‘1‘‘‘‘‘	‘‘‘‘‘Objet	3‘‘‘‘‘
‘‘‘1.1‘‘‘	‘‘‘Objet du Document	3‘‘‘
‘‘‘1.2‘‘‘	‘‘‘Acteurs du projet	3‘‘‘
‘‘‘‘‘2‘‘‘‘‘	‘‘‘‘‘Documents de Référence	4‘‘‘‘‘
‘‘‘‘‘3‘‘‘‘‘	‘‘‘‘‘Terminologie et Sigles utilisés	4‘‘‘‘‘
‘‘‘‘‘4‘‘‘‘‘	‘‘‘‘‘Services offerts	4‘‘‘‘‘
‘‘‘4.1‘‘‘	‘‘‘Enregistrer l’activité sémantique	4‘‘‘
‘‘‘4.2‘‘‘	‘‘‘Visualiser l’activité sémantique	4‘‘‘
‘‘‘‘‘5‘‘‘‘‘	‘‘‘‘‘Architecture fonctionnelle	4‘‘‘‘‘
‘‘‘5.1‘‘‘	‘‘‘Acteurs principaux et rôles	5‘‘‘
‘‘‘5.2‘‘‘	‘‘‘Concepts	5‘‘‘
‘‘‘5.3‘‘‘	‘‘‘Périmètre fonctionnel	6‘‘‘
‘‘‘‘‘6‘‘‘‘‘	‘‘‘‘‘Architecture technique	6‘‘‘‘‘
‘‘‘6.1‘‘‘	‘‘‘Généralités	6‘‘‘
6.1.1	Description matérielle.	6
6.1.2	Description des composantes logicielles.	6
6.1.3	Description des liens.	6
‘‘‘6.2‘‘‘	‘‘‘Choix d’implémentation	6‘‘‘
‘‘‘6.3‘‘‘	‘‘‘Schéma général & description des flux	7‘‘‘
6.3.1	Base de données pour EvalActiSem	7
6.3.2	Communication Php/MySql	9
6.3.3	Communication serveur : PHP Solidariciel / PHP EvalActiSem	9
6.3.4	Communication client : Solidariciel / PHP EvalActiSem	9
6.3.5	Structure de la page HTML	9
‘‘‘‘‘7‘‘‘‘‘	‘‘‘‘‘Description des interfaces	9‘‘‘‘‘
‘‘‘7.1‘‘‘	‘‘‘Interfaces logiciels	9‘‘‘
7.1.1	Objets PHP	9
7.1.1.1	EvalActiSem	10
7.1.1.2	Eval	10
7.1.1.3	Acti	11
7.1.1.4	Sem	11
7.1.1.5	SVG	12
7.1.2	Java script	12
7.1.3	XUL	12
‘‘‘7.2‘‘‘	‘‘‘Interface Homme Machine	12‘‘‘
7.2.1	Gestion de l’ontologie	12
7.2.1.1	Les classifications 10eF	12
7.2.1.2	L’ontologie IEML	13
7.2.1.3	Les traductions entre 10eF et IEML	13
7.2.1.4	La sémantisation de l’activité sur le site	14
7.2.2	Affichage des évaluations	14
‘‘‘‘‘8‘‘‘‘‘	‘‘‘‘‘Gestion des erreurs	15‘‘‘‘‘
‘‘‘‘‘9‘‘‘‘‘	‘‘‘‘‘Administration	15‘‘‘‘‘
‘‘‘9.1‘‘‘	‘‘‘Gestion des utilisateurs	15‘‘‘
‘‘‘9.2‘‘‘	‘‘‘La volumétrie	15‘‘‘
‘‘‘9.3‘‘‘	‘‘‘Purge	15‘‘‘
‘‘‘‘‘10‘‘‘‘‘	‘‘‘‘‘Installation de l’application	16‘‘‘‘‘
‘‘‘‘‘11‘‘‘‘‘	‘‘‘‘‘Paramètrage de l’application	16‘‘‘‘‘
‘‘‘‘‘12‘‘‘‘‘	‘‘‘‘‘Fin du document	16‘‘‘‘‘

==‘‘‘Objet==
===‘‘‘‘‘‘‘‘Objet du Document===
‘‘‘‘‘Ce document présente les Spécifications Techniques Détaillées d’un outil informatique (EvalActiSem) pour évaluer l’activité d’un groupe d’individu dans un espace sémantique particulier, celui de la Dixième Famille (10eF).
===‘‘‘‘‘Acteurs du projet===
•	*‘‘‘‘‘Equipe de conception
o	**Prof. Pierre Lévy, titulaire de la Chaire de Recherche du Canada en Intelligence Collective.
o	**Gary Généreux, Président Dixième Famille
o	**Yann Baranowski, Administrateur réseau Dixième Famille
o	**Samuel Szoniecky, ingénieur sémantique
o	**…
•	*Equipe de réalisation
o	**Yann Baranowski
o	**Samuel Szoniecky
o	**…
.
==Documents de Référence==

{| border=1 cellspacing=0 
!‘‘‘N°‘‘‘ !*!‘‘‘Titre‘‘‘ !*!‘‘‘Date‘‘‘ !*!‘‘‘Auteur‘‘‘ !
|- 
|‘‘‘1‘‘‘ |*|OntoIEML-10f.doc |*|Juillet 2007 |*|Pierre Lévy
|- 
|‘‘‘2‘‘‘ |*|solidariciel.zip |*|Juin 2007 |*|Yann Baranowski
|- 
|‘‘‘3‘‘‘ |*|Synthese Ontol 2eme version.doc |*|14/10/2007 |*|Gary Généreux
|- 
|‘‘‘4‘‘‘ |*|EvalActiSem10eF.doc |*|14/10/2007 |*|Samuel Szoneicky
|- 
|‘‘‘5‘‘‘ |*|Eval_capitaux_10ef_revu.doc |*|24/10/2007 |*|Yann Baranowski
|- 
|‘‘‘6‘‘‘ |*|semiography-7.doc |*| |*|Pierre Lévy
|} 

==Terminologie et Sigles utilisés==

{| border=1 cellspacing=0 
!Terme, Sigle, abréviation !*!Nature (*) !*!Désignation !
|- 
|IEML |*|sigle |*|Information Economy Meta Language
|- 
|10eF |*|sigle |*|Dixième Famille
|- 
|Solidariciel |*|équipement |*|Outil collaboratif de gestion en ligne du système d’information 10eF
|- 
|EvalActiSem |*|module |*|Outil d’évaluation de l’activité sémantique
|} 
(*) : terme, sigle, abréviation, progiciel, module, table, équipement, fournisseur, éditeur, ...
==‘‘‘Services offerts==
‘‘‘10eF possède un système d’information, fonctionnel pour gérer les relations entre des personnes proposant et demandant de l’aide (le Solidariciel cf. doc. 2).
Un travail d’ingénierie sémantique permettrait d’enrichir ce système pour qu’il offre une meilleure vision des offres, demandes, potentiels, besoins, etc. De plus, ce travail permettrait aux publics et acteurs de l’association de mieux atteindre leurs objectifs et résoudre leurs problèmes.
===‘‘‘‘‘Enregistrer l’activité sémantique===
‘‘‘‘‘Il s’agit d’enregistrer avec un langage sémantique l’activité des personnes qui participent au projet 10eF.
===‘‘‘‘‘Visualiser l’activité sémantique===
‘‘‘‘‘Le but et de présenter l’évolution d’un individu ou d’un groupe par rapport à une activité particulière. Sous la forme d’un « tableau de bord » présentant des variables synthétiques, l’outil doit refléter les grandes fonctions accomplies par l’association et tous ces acteurs pour rendre plus efficace l’entraide.
==‘‘‘Architecture fonctionnelle==
‘‘‘Chaque action effectuée par un utilisateur du Solidariciel peut être enregistré dans une base de données par rapport à l’espace sémantique de cette action. Il suffit pour cela d’enrichir la gestion événementielle du Solidariciel d’une couche sémantique. Concrètement, l’action de choisir un savoir dans le Solidariciel est actuellement générée par un « click » sur un bouton qui entraîne l’enregistrement dans la base de données d’un nouveau savoir pour un membre. Cet événement peut être sémantiquement contextualité en ajoutant une expression IEML à l’enregistrement. On peut ainsi enregistrer l’activité sémantique d’un utilisateur et utiliser ces données pour proposer des représentations de cette activité sous la forme de graphiques.
Pour plus de détail cf. doc 1, 4, 5.
===‘‘‘‘‘Acteurs principaux et rôles===
‘‘‘‘‘Les acteurs du projet sont :
	#les utilisateurs du Solidariciel :
	##Famille : une famille (Famille-ressource ou dixieme famille)
	##DF : une dixieme famille uniquement
	##FR : famille-ressource uniquement
	##Anim : l’animateur d’une galaxie (FR autorisée)
	#Les membres d’autres réseaux sociaux :
	##Associations partenaires
	##Administration territoriales
	###Services sociaux 
	###Services emploi 
	###Services fiscaux 
	##Entreprises partenaires
	#Les administrateurs de l’outil informatique
	##Ingénieur sémantique
	##Web master
===‘‘‘‘‘Concepts===
‘‘‘‘‘L’ensemble des concepts utilisés dans ce projet sont définis par une ontologie IEML cf. doc 1, 4, 5.
===‘‘‘‘‘Périmètre fonctionnel===
=== ===
==‘‘‘‘‘‘‘‘Architecture technique==
===‘‘‘‘‘‘‘‘Généralités===
====‘‘‘‘‘Description matérielle.====
Le matériel se compose de :
•	*Un serveur web hébergé chez www.ovh.fr 
•	*Des ordinateurs clients disposant du navigateur web Firefox
====Description des composantes logicielles.====
‘‘‘‘‘Composantes logicielles du serveur‘‘‘‘‘ :
•	*Une base MySql version ?? : [[http://dev.mysql.com/doc/]] 
•	*La librairie PHP version 5 : [[http://www.php.net/]] 
‘‘‘‘‘Composantes logicielles du client‘‘‘‘‘
•	*Firefox 2.0 (moteur Gecko  1.8.1 : [[http://xulfr.org/wiki/Gecko]] )
====Description des liens.====
Les liens utilisés sont ceux utilisés pour le WEB : HTML, XML…
===‘‘‘‘‘Choix d’implémentation===
‘‘‘‘‘Le Solidariciel étant une application PHP, l’utilisation des technologies AJAX nous semble le moyen le plus simple pour ajouter une couche sémantique aux événements générés par l’utilisateur.
EvalActiSem utilise une modélisation objet comme architecture de développement.
Au niveau de la présentation des données, nous proposons d’utiliser la technologie XUL pour développer les interfaces de gestion et le SVG pour développer les graphiques.

===‘‘‘‘‘Schéma général & description des flux===
‘‘‘‘‘  Les flux d’information gérés par EvalActiSem sont de trois ordres :
1.	#Génération avec une fonction PHP de code java script à destination du Solidariciel
2.	#Lecture de la base de donnée pour générer le flux IEML
3.	#Ecriture d’un flux IEML dans la base de donnée via une fonction AJAX
====Base de données pour EvalActiSem====
La base de donnée est modélisée suivant un schéma relationnel pour optimiser la gestion des flux. Les flux stockés en IEML étoile (* **) et en XML sont modélisées suivant un schéma hiérarchique multidimensionnelle (cf. doc. 6 et spécifications XML : SVG, XUL…).
Ce modèle est conçu pour être le plus générique possible afin de facilement l’utiliser pour de nouvelles ontologies IEML et d’autres système d’information.
•	*Table ieml_onto
Cette table est utilisée pour stocker l’ontologie IEML.

{| border=1 cellspacing=0 
!‘‘‘Champ‘‘‘ !*!‘‘‘Type‘‘‘ !*!‘‘‘Description‘‘‘ !
|- 
|‘‘‘ieml[[_id]]‘‘‘ |*|int(11) |*|Clef primaire auto_increment identifiant de la couche
|- 
|‘‘‘ieml_code‘‘‘ |*|Text |*|Expression IEML exprimée en langage * **
|- 
|‘‘‘ieml_desc‘‘‘ |*|varchar(255) |*|Descriptif exprimé en langage naturel
|- 
|‘‘‘ieml_niveau‘‘‘ |*|int(11) |*|Niveau de l’expression IEML dans l’arbre des couches
|- 
|‘‘‘ieml_parent‘‘‘ |*|int(11) |*|Identifiant de la couche parente
|} 
Nous proposons de limiter le descriptif de l’expression IEML (champ ieml_desc) à 255 caractères.
L’organisation hiérarchique unidimensionnelle de cette table implique qu’une couche (expression IEML) ne peut avoir qu’une seule couche parente conformément à la grammaire IEML. Nous rappelons que l’expression IEML est une organisation hiérarchique multidimensionnelle (Source Destination Traduction), ce qui veut dire que cette table décrit une succession de couches composées d’une arborescence.
•	*Table ieml_10ef
Cette table est utilisée pour stocker les classifications de 10ef à traduire en expression IEML.

{| border=1 cellspacing=0 
!‘‘‘Champ‘‘‘ !*!‘‘‘Type‘‘‘ !*!‘‘‘Description‘‘‘ !
|- 
|‘‘‘10ef_[[id]]‘‘‘ |*|int(11) |*|Clef primaire auto_increment identifiant de la classification
|- 
|‘‘‘10ef_desc‘‘‘ |*|varchar(255) |*|Descriptif de la classification
|- 
|‘‘‘10ef_code‘‘‘ |*|varchar(255) |*|Nom de la table ou identifiant de la ligne
|- 
|‘‘‘10ef_parent‘‘‘ |*|Int(11) |*|Identifiant de la classification parente
|- 
|‘‘‘10ef_niveau‘‘‘ |*|int(11) |*|Niveau de la classification dans l’arbre
|} 
Les lignes de niveau 0 correspondent aux nom des tables utilisées par le Solidariciel pour décrire les classification 10eF. Toutes ces tables ont comme clef primaire un champ nommé « id », ce qui permet de ne pas stocker ce nom qui est utilisé pour les jointures entre les tables de EvalActiSem et celles du Solidariciel.
•	*Table ieml_trad
Cette table est utilisée pour stocker les traductions des classifications 10eF en expression IEML.

{| border=1 cellspacing=0 
!‘‘‘Champ‘‘‘ !*!‘‘‘Type‘‘‘ !*!‘‘‘Extra‘‘‘ !
|- 
|‘‘‘ieml[[_id]]‘‘‘ |*|int(11) |*|Identifiant de la table ieml_onto
|- 
|‘‘‘10ef_[[id]]‘‘‘ |*|int(11) |*|Identifiant de la table ieml_10ef
|} 
On peut noter que cette table permet de stocker une traduction IEML pour plusieurs classifications 10eF. L’inverse est aussi vrai mais il ne semble pas pertinent d’avoir plusieurs traductions IEML pour une même classification 10eF.
•	*Table ieml_acti
Cette table est utilisée pour stocker les actions du Solidariciel à prendre en compte pour l’évaluation de l’activité 

{| border=1 cellspacing=0 
!‘‘‘Champ‘‘‘ !*!‘‘‘Type‘‘‘ !*!‘‘‘Extra‘‘‘ !
|- 
|‘‘‘acti[[_id]]‘‘‘ |*|Int(11) |*|Identifiant de la table ieml_acti
|- 
|‘‘‘acti_code‘‘‘ |*|Text |*|Chaîne de caractère exprimé avec le langage IEML * ** suivant la formule suivante : 
Source = nom de la page et identifiant de l’élément HTML
Destination = expression IEML définissant l’adresse sémantique
Traduction = nom de l’ontologie, ici 10eF
|- 
|‘‘‘acti_desc‘‘‘ |*|varchar(255) |*|Descriptif exprimé en langage naturel
|} 
•	*Table ieml_flux
Cette table est utilisée pour stocker les flux IEML produit par l’activité avec le Solidariciel.

{| border=1 cellspacing=0 
!‘‘‘Champ‘‘‘ !*!‘‘‘Type‘‘‘ !*!‘‘‘Extra‘‘‘ !
|- 
|‘‘‘flux[[_id]]‘‘‘ |*|int(11) |*|Identifiant de la table ieml_flux
|- 
|‘‘‘acti_id‘‘‘ |*|int(11) |*|Identifiant de la table ieml_acti	
|- 
|‘‘‘flux_ieml‘‘‘ |*|Text |*|Chaîne de caractère formaté avec le langage * ** sous la forme :
Source = l’identifiant de l’utilisateur effectuant l’action : *tu-tu-.we-b-.tu-nu-du-.[personnes,id,-]:** (nombre, système d’information [nom de la table, nom du champ, -] . unique)
Destination = la phrase IEML correspondant au contexte sémantique de l’action
Translation = la phrase IEML correspondant au contexte sémantique du processus (navigation) ayant amené l’action. Cette expression IEML sera construite dynamiquement par les actions de l’utilisateur.
|- 
|‘‘‘flux_date‘‘‘ |*|Date |*|Date de création du flux
|} 
Il n’y a pas de taille limite pour le flux.
Chaque flux est associé à une action sur le solidariciel
====Communication Php/MySql====
Nous proposons d’utiliser l’architecture de connexion du Solidariciel pour minimiser au maximum l’impact de l’ajout de EvalActiSem dans le systèmed’information10eF.
En cas de besoin, nous mettons à disposition une class spécifique dédié à cette fonctionnalité : database.php
Les paramètres de connexion sont déjà géré par le Solidariciel, nous proposons de les utiliser.
====Communication serveur : PHP Solidariciel / PHP EvalActiSem====
A ce niveau, les communications se font par la création dans le code PHP du Solidariciel d’un objet PHP EvalActiSem avec les paramètres nécessaires à son bon fonctionnement.
Une fois créé, l’objet EvalActiSem sera utilisé pour généré un flux java script à intégrer à la construction de la page du Solidariciel.
====Communication client : Solidariciel / PHP EvalActiSem====
La communication entre le client Solidariciel (navigateur web) et EvalActiSem se fait par une fonction java script généré par l’objet PHP EvalActiSem qui implémente la technologie de requête asynchrone AJAX.
====Structure de la page HTML====
<?php
…
$objEAS = new EvalActiSem($user, $page)
…
?>
<html>
<head>
…
<script src="EvalActiSem.js" type="text/javascript"></script>
…
</head>
<body>
…
<?php $objEAS->GetScript($proc) ; ?>
	…
</body>
</html>

==‘‘‘Description des interfaces==
‘‘‘
===‘‘‘‘‘Interfaces logiciels===
====‘‘‘‘‘Objets PHP====
Ces objets sont développés en PHP 5.
‘‘‘EvalActiSem
‘‘‘Cet objet est l’objet principal dont tous les autres objets héritent. Cette objet permet de générer le flux java script à positionner dans les pages et les flux sémantique à stocker dans la base de données.

{| border=1 cellspacing=0 
!‘‘‘Propriétés‘‘‘ !
|- 
|Nom |*|Type |*|Description
|- 
|User |*|*int
ou
*Objet Solidariciel |*|Identifiant de l’utilisateur ou objet qui utilise le Solidariciel
|- 
|Page |*|*Chaîne de caractères
ou
*Objet Solidariciel |*|Nom de la page ou objet correspondant à la page dans lequel sera généré le java script.
|- 
|Eval |*|*Objet Eval |*|Objet permettant de gérer les graphiques générés pour visualiser l’évaluation de l’activité
|- 
|Acti |*|*Objet Acti |*|Objet permettant de gérer les différents activité mise en jeu par le Solidariciel
|- 
|Sem |*|*Chaîne de caractères |*|Flux sémantique formaté en langage IEML * **
|- 
|JS |*|*Chaîne de caractères |*|Code java script généré par l’objet et à introduire dans la page :
<script type="text/javascript">SetEval(18,’* **’);</script>
|} 


{| border=1 cellspacing=0 
!‘‘‘Méthodes‘‘‘ !
|- 
|Nom |*|IN |*|OUT |*|Description
|- 
|__construct |*|*User
*Page |*|Objet EvalActiSem |*|Méthode de création de l’objet
|- 
|GetScript |*|*Acte |*|Chaîne de caractères |*|Génère le java script suivant le type de processus
|- 
|SetFlux |*| |*| |*|Fonction d’enregistrement dans la base de données du flux sémantique
|- 
|GetFlux |*| |*|Chaîne de caractères |*|Génère le flux sémantique en langage * **
|} 
‘‘‘
Eval
‘‘‘Cet objet hérite de l’objet EvalActiSem. Il permet de générer, afficher, stocker les graphiques générée.

{| border=1 cellspacing=0 
!‘‘‘Propriétés‘‘‘ !
|- 
|Nom |*|Type |*|Description
|- 
|Type |*|*Chaîne de caractères |*|Type de graphique à gérer : Camembert, icône, Tag Cloud…
|- 
|Graph |*|*Chaîne de caractères |*|Flux XML (SVG, X3D…) permettant de décrire le graphique.
|- 
|Actis |*|*Tableau d’objet Acti |*|Collection des activités nécessaire pour construire le graphique
|- 
|Date |*|*Date |*|Date de l’évaluation
|} 


{| border=1 cellspacing=0 
!‘‘‘Méthodes‘‘‘ !
Nom*IN*OUT*Description
__construct**Type
*Date*Objet Eval*Méthode de création de l’objet par rapport ayu type et à la date
GetGraph**Chaîne de caractères*Génère le graphique
GetActis**Tableau d’objet Acti*Création de la collection des objets actis
|} 

‘‘‘Acti
‘‘‘Cet objet hérite de l’objet EvalActiSem. Il permet de gérer les données relatives à l’activité des utilisateurs avec le Solidariciel.
{| border=1 cellspacing=0 
!‘‘‘Propriétés‘‘‘ !
Nom	Type	Description
Id	•	*Entier	Identifiant de l’activité
Type	•	*Chaîne de caractères	Type d’activité : cf. doc 1 et 5
Sem	•	*Objet Sem	Objet permettant de gérer les données sémantiques

‘‘‘Méthodes‘‘‘			
Nom	IN	OUT	Description
__construct	•	*Type	Objet Acti	Méthode de création de l’objet
GetSem	Date	Tableau d’objet Sem	Récupère la collection des objets Sem
SetActi			Enregistre l’activité dans la base de données

‘‘‘Sem
‘‘‘Cet objet hérite de l’objet EvalActiSem. Il permet de gérer les données sémantiques.
‘‘‘Propriétés‘‘‘
Nom	Type	Description
Id	•	*Entier	Identifiant de la données sémantiques
Flux	•	*Chaîne de caractères	Flux IEML en langage * **
Date	•	*Date	Date du flux

‘‘‘Méthodes‘‘‘			
Nom	IN	OUT	Description
__construct	•	*Date	Objet Sem	Méthode de création de l’objet
GetFlux		Chaîne de caractères	Récupère le flux dans la base de données
SetFlux	•	*Chaîne de caractères		Enregistre le flux dans la base de données

‘‘‘SVG
‘‘‘Cette collection d’objets permet de générer des graphiques SVG, cf. doc en ligne.
====Java script====
Afin de minimiser l’impact sur les pages existantes, le seul objet java script utilisé est XMLHttpRequest. Il permet d’envoyer des requêtes WEB de façon transparente pour l’utilisateur.
====XUL====
Les interfaces de gestion sont développées avec XUL et plus particulièrement en utilisant les objets suivants :
•	*Treeview
•	*Menu
•	*Splitter
Le cas échéant il sera développé des « bindings » : objets XUL étendus pour des besoins spécifiques.
===‘‘‘‘‘Interface Homme Machine===
‘‘‘‘‘Les interface homme machine sont développées en utilisant les composants classiques des écrans de gestion.
Un menu bar horizontal permet d’accéder aux différents écrans 
 
====Gestion de l’ontologie====
Pour gérer l’ontologie des interfaces homme machine sont nécessaires pour modifier, ajouter, supprimer les différents éléments.
‘‘‘Les classifications 10eF
‘‘‘ 
Les champs nécessaires sont ceux de la table ieml_10ef.
‘‘‘L’ontologie IEML
‘‘‘ 
Les champs nécessaires sont ceux de la table ieml_onto.
‘‘‘Les traductions entre 10eF et IEML
‘‘‘ 
Les champs nécessaires sont ceux des tables ieml_onto, ieml_10ef et ieml_trad.
‘‘‘La sémantisation de l’activité sur le site
‘‘‘ 
Les champs nécessaires sont ceux de la table ieml_acti
====Affichage des évaluations====
L’affichage des évaluations ce fait suivant le profil des utilisateurs.
Les représentations graphiques disponible sont les suivantes :
•	*graphiques SVG.
 
•	*Graphiques java

•	*TagCloud
 
•	*Carte géographique
 
•	*Icones
   
==‘‘‘Gestion des erreurs==
‘‘‘Les erreurs éventuellement générées par l’utilisation d’EvalActiSem sont stockés dans un fichier.
==‘‘‘Administration==
===‘‘‘‘‘‘‘‘Gestion des utilisateurs===
‘‘‘‘‘La gestion des utilisateurs est celle du Solidariciel.
===‘‘‘‘‘La volumétrie===
‘‘‘‘‘Aujourd’hui la volumétrie est de ??? page par jour pour ??? utilisateurs du Solidariciel. Le système doit pouvoir gérer des flux de ??? page par jour pour ??? utilisateurs ce qui représente ??? lignes dans la table ???.
===‘‘‘‘‘Purge===
‘‘‘‘‘Compte tenu la volumétrie relativement peu importante les questions de purge ne sont pas pour l’instant d’actualité.
==‘‘‘Installation de l’application==
==Paramètrage de l’application==
==Fin du document==
‘‘‘
